<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>小康的学习记录</title>
        <link>https://study.tzki.cn/</link>
        <description>一个收藏回忆与分享技术的地方！</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sviptzk@163.com (Dreamy.TZK)</managingEditor>
            <webMaster>sviptzk@163.com (Dreamy.TZK)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
            <atom:link href="https://study.tzki.cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Express框架实现一个简单的博客系统</title>
    <link>https://study.tzki.cn/posts/project/20200712/</link>
    <pubDate>Sun, 12 Jul 2020 21:52:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/project/20200712/</guid>
    <description><![CDATA[下载源码前言 这篇文章是记录一下自己动手完成一个博客开发的历程。
一个前台靠扒别人页面后端靠layui实现的博客。
至此博客开坑任务基本完成2020-07-13 前台
文章支持markdown解析及代码高亮（highlight）
文章置顶
文章分页显示
分类文章
修改登陆注册的UI
后台
可以修改用户头像以及昵称
前台
根据登陆用户头像显示头像
根据用户昵称显示作者（文章）昵称
Aplayer播放器
待完善评论虽然可以分页，但存在小bug
由于开始时考虑不周，导致置顶无法自定义顺序
由于前期不了解layui，因此导致一些布局等出现了小问题
其他问题发现中。。。
功能开坑
前台可以修改个人信息
设置某个字段查询不显示 1 2 3 4  password:{ type:String, select:false },   置顶文章 置顶文章需要设置一个字段，用于记录这篇文章是否置顶。然后按时间排序。
1  sort({hot:-1,_id: -1})   得益于可以传入多个参数。
markdown解析及代码高亮（highlight） markdown解析借助于marked插件得以实现；highlight则是借助于highlight.js得以实现。
1 2 3 4 5 6  marked.setOptions({ highlight: function (code) { return require(&#39;highlight.]]></description>
</item><item>
    <title>一、MongoDB的安装</title>
    <link>https://study.tzki.cn/posts/notes/20200708/20200708-1/</link>
    <pubDate>Wed, 08 Jul 2020 11:01:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/notes/20200708/20200708-1/</guid>
    <description><![CDATA[Windows系统 由于二进制包安装了半个小时，还是卡在进度条不动。因此决定使用压缩包进行安装。
  下载安装包
下载地址
  下载完成后将其解压，例如我解压到了F:\MongoDB文件下。
  接下来进入该文件创建data与logs文件
  以管理员身份启动终端，然后输入如下命令
1  mongod --install --dbpath F:\MongoDB\data --logpath F:\MongoDB\logs\mongo.log     开启数据库服务
1  net start mongodb     链接数据库
1  mongo     其他命令
  删除服务
1  mongod --remove     关闭服务
1  net stop mongodb     Linux系统 ]]></description>
</item><item>
    <title>三、MongoDB高级操作</title>
    <link>https://study.tzki.cn/posts/notes/20200708/20200708-3/</link>
    <pubDate>Wed, 08 Jul 2020 11:01:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/notes/20200708/20200708-3/</guid>
    <description><![CDATA[排序&amp;分页 准备数据
1 2 3 4 5 6 7 8  use test3 db.c1.insert({_id:1,name:&#34;a&#34;,sex:1,age:1}) db.c1.insert({_id:2,name:&#34;a&#34;,sex:1,age:2}) db.c1.insert({_id:3,name:&#34;b&#34;,sex:2,age:3}) db.c1.insert({_id:4,name:&#34;c&#34;,sex:2,age:4}) db.c1.insert({_id:5,name:&#34;d&#34;,sex:2,age:5}) db.c1.find()   排序 1  db.集合名.find().sort(JSON数据)   Limit与Skip方法 1  db.集合名.find().sort().skip(数字).limit(数字)    skip跳过指定数量（可选） limit限制查询的数量   使用.count()可以统计数量
 实例练习   跳过0条数据，查询两条
1 2  db.c1.find().sort({age:-1}).skip(0).limit(2) db.c1.find().sort({age:-1}).limit(2)     跳过两条数据，查询两条数据
1  db.c1.find().sort({age:-1}).skip(2).limit(2)     数据库1-10数据，每页显示两条
1  db.集合名.find().skip().limit(2)    skip计算公式：（当前页-1）* 每页显示条数]]></description>
</item><item>
    <title>二、MongoDB基本操作及增删改查</title>
    <link>https://study.tzki.cn/posts/notes/20200708/20200708-2/</link>
    <pubDate>Wed, 08 Jul 2020 11:01:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/notes/20200708/20200708-2/</guid>
    <description><![CDATA[基本操作 登陆数据库
1  mongo   查看数据库 语法
1  show databases;   选择数据库 1  use 数据库名   如果切换到一个没有的数据库，例如use admin2，那么会隐式创建这个数据库。（后期当该数据库有数据时，系统自动创建）
1  use admin2   查看集合 1  show collections   创建集合 1  db.createCollection(&#39;集合名&#39;)   删除集合 1  db.集合名.drop()   删除数据库  通过use语法选择数据 通过db.dropDataBase()删除数据库  增删改查 C增 1  db.集合名.insert(JSON数据)   如果集合存在，那么直接插入数据。如果集合不存在，那么会隐式创建。
 在test2数据库的c1集合中插入数据（姓名叫webopenfather年龄18岁）
1 2  use test2 db.c1.insert({uname:&#34;webopenfather&#34;,age:18})    数据库和集合不存在都隐式创建 对象的键统一不加引号（方便看），但是查看集合数据时系统会自动加 mongodb会给每条数据增加一个全球唯一的_id键     _id键的组成]]></description>
</item><item>
    <title>四、mongoose的使用</title>
    <link>https://study.tzki.cn/posts/notes/20200708/20200708-4/</link>
    <pubDate>Wed, 08 Jul 2020 11:01:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/notes/20200708/20200708-4/</guid>
    <description><![CDATA[mongoose 核心概念
  schema
约束字段/列数据
  model模型
对应 集合 后期用它来实现数据增删改查
  简介   安装
1  npm i mongoose     schema
英文网： http://mongoosejs.com
中文网： http://mongoosejs.net/
作用：用来约束MongoDB文档数据（哪些字段必须，哪些字段可选的）
  model
一个模型对应一个集合。后面通过模型管理集合中的数据。
  使用 基本模型
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  // 一、导入模块 const mongoose = require(&#34;mongoose&#34;); // 二、连接数据库 const db = mongoose.]]></description>
</item><item>
    <title>NodeJs博客系统开发</title>
    <link>https://study.tzki.cn/posts/project/20200707/</link>
    <pubDate>Tue, 07 Jul 2020 19:52:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/project/20200707/</guid>
    <description><![CDATA[下载源码开发前的准备   安装插件
 body-parser cookies express markdown mongoose swig  1  npm i body-parser cookies markdown mongoose swig     基本的目录结构
1 2 3 4 5 6 7 8 9 10 11  blog ├── app.js 应用（启动）入口文件 ├── db 数据库存储目录 ├── models 数据库模型文件目录 ├── node_modules node第三方模块目录 ├── package-lock.json ├── package.json ├── public 公共文件目录（css、js、image...） ├── routers 路由文件目录 ├── schemas 数据库结构文件（schema）目录 └── views 模板试图文件目录     导入并定义当前使用的模板引擎]]></description>
</item><item>
    <title>十、Promise的使用</title>
    <link>https://study.tzki.cn/posts/notes/20200707/</link>
    <pubDate>Tue, 07 Jul 2020 16:17:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/notes/20200707/</guid>
    <description><![CDATA[Promise用来做什么 用来解决回调地狱。回调地狱也就是回调函数中嵌套了回调函数，代码阅读性低。
例如如下代码：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  const fs = require(&#34;fs&#34;); // 读A文件 fs.readFile(`${__dirname}/etc/a.txt`, &#34;utf-8&#34;, (err, data) =&gt; { if (err) { console.log(err); } else { console.log(data); // 读B文件  fs.readFile(`${__dirname}/etc/b.txt`, &#34;utf-8&#34;, (err, data) =&gt; { if (err) { console.log(err); } else { console.log(data); // 读C文件  fs.]]></description>
</item><item>
    <title>九、英雄管理系统</title>
    <link>https://study.tzki.cn/posts/exercise/20200705-cqmanager/</link>
    <pubDate>Sun, 05 Jul 2020 22:16:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/exercise/20200705-cqmanager/</guid>
    <description><![CDATA[查看源代码
 准备 mysql-ithm的使用   安装npm i mysql-ithm
  使用
参照文档即可。
  简单示例
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  // 导入模块 const hm = require(&#34;mysql-ithm&#34;); //2.连接数据库 //如果数据库存在则连接，不存在则会自动创建数据库 hm.connect({ host: &#34;localhost&#34;, //数据库地址  port: &#34;3306&#34;, user: &#34;root&#34;, //用户名，没有可不填  password: &#34;root&#34;, //密码，没有可不填  database: &#34;cqmanager502&#34;, //数据库名称 }); //3.]]></description>
</item><item>
    <title>八、NPM包管理</title>
    <link>https://study.tzki.cn/posts/notes/20200704/20200704-3/</link>
    <pubDate>Sat, 04 Jul 2020 18:17:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/notes/20200704/20200704-3/</guid>
    <description><![CDATA[如何写NodeJs模块  遵守commentjs规范。  导入模块 暴露出去（导出）    一个简单的示例：
1 2 3 4 5 6 7 8 9 10 11 12 13  // 定义一个对象 let db = { baseUrl: &#34;http://127.0.0.1:3000/&#34;, insert: function () { console.log(&#34;插入方法&#34;); }, delete: function () { console.log(&#34;删除方法&#34;); }, }; // 将其暴露出去 module.exports = db;   在我们的模块中定义一个对象，并将其暴露出去。接下来在我们自己的js文件中去使用这个对象。
1 2  const myMoudle = require(&#34;./01-自己写的模块.js&#34;); myMoudle.insert();   写一个自己的模块 NPM发布包   进入待发布的目录，然后初始化目录npm init。并依次填入包名、版本、描述等信息。如果没有可以跳过（回车）。
  注册NPM账号]]></description>
</item><item>
    <title>七、NodeJs数据库管理</title>
    <link>https://study.tzki.cn/posts/notes/20200704/20200704-2/</link>
    <pubDate>Sat, 04 Jul 2020 15:56:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://study.tzki.cn/posts/notes/20200704/20200704-2/</guid>
    <description><![CDATA[title: 七、NodeJs数据库管理 categories:
 大前端 NodeJs tags: 大前端 NodeJs mysql 笔记 date: 2020-07-04 15:56:58  建表 MySQL程序可以使用PHP study集成工具。链接、操作数据库可以使用phpstudy自带的工具也可以使用navicat工具。
SQL语句-增删改查   插入数据
1  insert into 表名(字段名1，字段名2) values(值1，值2);   例如：
1  insert into user(name,description) values(&#39;陈浩南&#39;,&#39;铜锣湾扛把子&#39;);     删除数据
1  delete from 表名 where 条件;   条件一定要写，如果不写则会删除该表中所有的数据删除。
例如：
1  delete from user where id&gt;3;     修改数据
1  update 表名 set 字段名1=新值1,字段名2=新值2 where 条件;   条件一定要写，如果不写则会修改数据表中的全部数据]]></description>
</item></channel>
</rss>
