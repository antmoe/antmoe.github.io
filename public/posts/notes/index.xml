<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有我的笔记汇总 - 小康的学习记录</title>
        <link>https://study.tzki.cn/posts/notes/</link>
        <description>所有我的笔记汇总 | 小康的学习记录</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dreamytzk@outlook.com (Dreamy.TZK)</managingEditor>
            <webMaster>dreamytzk@outlook.com (Dreamy.TZK)</webMaster><lastBuildDate>Sun, 10 May 2020 21:35:50 &#43;0800</lastBuildDate><atom:link href="https://study.tzki.cn/posts/notes/" rel="self" type="application/rss+xml" /><item>
    <title>2020年07月08日笔记汇总</title>
    <link>https://study.tzki.cn/posts/notes/20200708/</link>
    <pubDate>Wed, 08 Jul 2020 17:03:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200708/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>十、Promise的使用</title>
    <link>https://study.tzki.cn/posts/notes/20200707/</link>
    <pubDate>Tue, 07 Jul 2020 16:17:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200707/</guid>
    <description><![CDATA[Promise用来做什么 用来解决回调地狱。回调地狱也就是回调函数中嵌套了回调函数，代码阅读性低。 例如如下代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]]></description>
</item><item>
    <title>2020年07月04日笔记汇总</title>
    <link>https://study.tzki.cn/posts/notes/20200704/</link>
    <pubDate>Sat, 04 Jul 2020 17:03:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200704/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>2020年07月03日笔记汇总</title>
    <link>https://study.tzki.cn/posts/notes/20200703/</link>
    <pubDate>Fri, 03 Jul 2020 17:03:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200703/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>2020年07月02日笔记汇总</title>
    <link>https://study.tzki.cn/posts/notes/20200702/</link>
    <pubDate>Thu, 02 Jul 2020 17:03:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200702/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>2020年07月01日笔记汇总</title>
    <link>https://study.tzki.cn/posts/notes/20200701/</link>
    <pubDate>Wed, 01 Jul 2020 17:03:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200701/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>2020年06月24日笔记汇总</title>
    <link>https://study.tzki.cn/posts/notes/20200624/</link>
    <pubDate>Wed, 24 Jun 2020 17:03:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200624/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>jQuery原理（DOM操作相关方法）</title>
    <link>https://study.tzki.cn/posts/notes/20200623/</link>
    <pubDate>Tue, 23 Jun 2020 11:35:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200623/</guid>
    <description><![CDATA[empty方法 清空指定元素中的所有内容。也就是遍历内容，然后将其innerHTML清空。 1 2 3 4 5 6 7 8 9 10 kjQuery.prototype.extend({ empty: function () { // 遍历所有找到的元素 this.each(function]]></description>
</item><item>
    <title>jQuery原理（原型上的属性、方法）</title>
    <link>https://study.tzki.cn/posts/notes/20200622/</link>
    <pubDate>Mon, 22 Jun 2020 11:35:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200622/</guid>
    <description><![CDATA[jQuery原型上的属性 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 kjQuery.prototype = { constructor: kjQuery, init: function (selector) {}, // 版本号 jquery: &#34;1.1.0&#34;, // 实例默认的选择器取值 selector: &#34;&#34;, // 实例默认的长度 length: 0, // 给实例]]></description>
</item><item>
    <title>jQuery原理（入口函数）</title>
    <link>https://study.tzki.cn/posts/notes/20200621/</link>
    <pubDate>Sun, 21 Jun 2020 19:42:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://study.tzki.cn/posts/notes/20200621/</guid>
    <description><![CDATA[基本结构 jQuery的基本结构如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 (function (window, undefiend) { var jQuery = function () { return new jQuery.fn.init() } jQuery.prototype = { constructor: jQuery } jQuery.fn.init.prototype = jQuery.prototype window.jQuery = window.$ =]]></description>
</item></channel>
</rss>
