<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All 2020年07月03日笔记汇总 - 小康的学习记录</title><link>https://study.tzki.cn/posts/notes/20200703/</link><description>All 2020年07月03日笔记汇总 | 小康的学习记录</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sviptzk@163.com (Dreamy.TZK)</managingEditor><webMaster>sviptzk@163.com (Dreamy.TZK)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 03 Jul 2020 17:03:50 +0800</lastBuildDate><atom:link href="https://study.tzki.cn/posts/notes/20200703/" rel="self" type="application/rss+xml"/><item><title>五、express实战-英雄管理系统</title><link>https://study.tzki.cn/posts/notes/20200703/20200703-2/</link><pubDate>Fri, 03 Jul 2020 14:55:50 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200703/20200703-2/</guid><description><![CDATA[查看源码 后端路由 简单来说，注册路由就是写接口
登录接口 登录接口实现很简单，只需要接收post传来的参数，然后进行验证即可。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  const express = require(&#34;express&#34;); const bodyParser = require(&#34;body-parser&#34;); app.use(bodyParser.urlencoded({ extended: false })); // 登录接口 app.post(&#34;/login&#34;, (req, res) =&gt; { // 接收用户传递过来的用户名和密码  let { username, password } = req.body; if (username == &#34;admin&#34; &amp;&amp; password == &#34;123&#34;) { res.send({ code: 200, msg: &#34;登陆成功&#34;, }); } else { res.]]></description></item><item><title>四、node服务器搭建</title><link>https://study.tzki.cn/posts/notes/20200703/20200703-1/</link><pubDate>Fri, 03 Jul 2020 14:55:50 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200703/20200703-1/</guid><description><![CDATA[什么是端口 一台电脑可以部署多个服务器，根据端口不同找到不同的服务器。
默认的http端口为80端口。
web服务器读取网页并返回  使用http模块开启一个服务器 在服务器内部读取文件，将读取到的字符串内容作为服务器的响应返回  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  const http = require(&#34;http&#34;); const fs = require(&#34;fs&#34;); const path = require(&#34;path&#34;); const server = http.createServer((req, res) =&gt; { // 拼接路径  const filePath = path.join(__dirname, &#34;index.html&#34;); fs.readFile(filePath, &#34;utf-8&#34;, (err, data) =&gt; { if (err == null) { // 返回页面  res.end(data); } else { res.]]></description></item></channel></rss>