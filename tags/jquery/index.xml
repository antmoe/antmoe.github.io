<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>jQuery - Tag - 小康的学习记录</title><link>https://study.tzki.cn/tags/jquery/</link><description>jQuery - Tag - 小康的学习记录</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sviptzk@163.com (Dreamy.TZK)</managingEditor><webMaster>sviptzk@163.com (Dreamy.TZK)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 24 Jun 2020 17:05:00 +0800</lastBuildDate><atom:link href="https://study.tzki.cn/tags/jquery/" rel="self" type="application/rss+xml"/><item><title>jQuery原理（事件操作相关方法）</title><link>https://study.tzki.cn/posts/notes/20200624/20200615-2/</link><pubDate>Wed, 24 Jun 2020 17:05:00 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200624/20200615-2/</guid><description>on方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 // 事件操作相关方法 kjQuery.prototype.extend({ on: function (name, callBack) { this.each(function (key, ele) { // 2. 判断当前元素中是否有保存所有事件的对象 if (!ele.eventsCache) { ele.eventsCache = {}; } // 3. 判断对象中有没有对应类型的数组 if (!ele.eventsCache[name]) { ele.eventsCache[name] = []; // 4. 将回调函数添加到数组中 ele.eventsCache[name].push(callBack); // 5. 添加对应类型的事件 kjQuery.addEvent(ele, name, function () { kjQuery.</description></item><item><title>jQuery原理（属性操作相关方法）</title><link>https://study.tzki.cn/posts/notes/20200624/20200615-1/</link><pubDate>Wed, 24 Jun 2020 17:04:50 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200624/20200615-1/</guid><description>attr方法 设置或者获取元素的属性节点值
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //属性操作相关的方法 kjQuery.prototype.extend({ attr: function (attr, value) { // 1. 判断是否是字符串 if (kjQuery.isString(attr)) { if (arguments.length == 1) { return this[0].getAttribute(attr); } else { this.each(function (key, ele) { ele.setAttribute(attr, value); }); } } // 2. 判断是否是对象 else if (kjQuery.isObject(attr)) { var $this = this; // 遍历取出所有属性节点的名称和对应值 $.</description></item><item><title>五、jQuery动效</title><link>https://study.tzki.cn/posts/notes/20200616/20200615-2/</link><pubDate>Tue, 16 Jun 2020 18:39:51 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200616/20200615-2/</guid><description><![CDATA[显示隐藏动画 显示show()动画，隐藏动画hide()，切换动画toggle()
这三个方法都可以传入参数：
  一个参数
代表动画完成的时间
  两个参数
第一个表示动画完成的时间，第二个参数表示动画完成后执行的回调函数
  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  $(function () { $(&#39;button&#39;).eq(0).click(function () { $(&#39;div&#39;).show(1000, function () { alert(&#39;显示动画执行完毕&#39;) }) }) $(&#39;button&#39;).eq(1).click(function () { $(&#39;div&#39;).hide(1000, function () { alert(&#39;隐藏动画执行完毕&#39;) }) }) $(&#39;button&#39;).eq(2).click(function () { $(&#39;div&#39;).toggle(1000, function () { alert(&#39;切换动画执行完毕&#39;) }) }) })   对联广告案例   监听网页滚动]]></description></item><item><title>四、jQuery事件相关</title><link>https://study.tzki.cn/posts/notes/20200616/20200615-1/</link><pubDate>Tue, 16 Jun 2020 13:30:50 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200616/20200615-1/</guid><description><![CDATA[事件绑定 绑定方式有两种：
  直接通过.eventName(fn)方式绑定。
1 2 3  $(&#39;button&#39;).click(function () { alert(&#39;hello tzk&#39;) })    编码效率高 部分事件jQuery没有实现    通过on(eventName,function)方式绑定
1 2 3  $(&#39;button&#39;).on(&#39;click&#39;, function () { alert(&#39;hello tzk&#39;) })    编码效率略低 所有JavaScript事件都可以添加    注意：以上两种绑定方式均不会被覆盖，并且可以添加多个事件。
 1 2 3 4 5 6 7 8 9  $(&#39;button&#39;).click(function () { alert(&#39;hello tzk&#39;) }) $(&#39;button&#39;).click(function () { alert(123) }) $(&#39;button&#39;).mouseleave(function () { alert(mouseleave) })   事件解绑 事件解绑只有一个方法off()，只需要用需要解绑的元素调用此方法即可。]]></description></item><item><title>三、jQuery属性操作</title><link>https://study.tzki.cn/posts/notes/20200615/20200615-3/</link><pubDate>Mon, 15 Jun 2020 18:50:52 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200615/20200615-3/</guid><description><![CDATA[jQuery内容选择器 为了方便测试，先将DOM元素写为以下格式：
1 2 3 4 5  &lt;div&gt;&lt;/div&gt; &lt;div&gt;我是div&lt;/div&gt; &lt;div&gt;我是div123&lt;/div&gt; &lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt; &lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;     :empty找到既没有文本内容也没有子元素的指定元素。
这个选择器对于以上内容只能找到第一个div。
1 2  var $div = $(&#39;div:empty&#39;) console.log($div)     :parent 找到有文本内容或有子元素的指定元素
可以找到除第一个意外的四个元素
1 2  var $div = $(&#39;div:parent&#39;) console.log($div)     :contains(text)找到包含指定文本内容的指定元素
视内容找到包含内容的div
1 2  var $div = $(&#39;div:contains(&#34;我是div123&#34;)&#39;) console.log($div)     :has(selector)找到包含指定子元素的指定元素
视搜索内容找到包含此子元素的元素
1 2  var $div = $(&#39;div:has(&#34;span&#34;)&#39;) console.log($div)     属性和属性节点   什么是属性]]></description></item><item><title>二、jQuery核心函数和工具方法</title><link>https://study.tzki.cn/posts/notes/20200615/20200615-2/</link><pubDate>Mon, 15 Jun 2020 18:50:51 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200615/20200615-2/</guid><description><![CDATA[jQuery核心函数 jQuery的核心函数就是$();，圆括号内可以传递函数、字符串选择器、字符串代码片段、DOM元素等。
  传递函数
1 2 3  $(function () { alert(1) })     字符串选择器
返回一个jQuery对象，对象中保存了找到的DOM元素
1 2 3 4 5 6  $(function () { var $box1 = $(&#34;.box1&#34;) var $box2 = $(&#34;#box2&#34;) console.log($box1) console.log($box2) })     字符串代码片段
返回一个jQuery对象，对象中保存了创建的DOM元素
1 2 3 4  $(function () { var $p = $(&#39;&lt;p&gt;我是段落&lt;/p&gt;&#39;) console.log($p) })     接收一个DOM元素
DOM元素会被包装成一个jQuery对象返回。
1 2 3 4 5 6  $(function () { var span = document.]]></description></item><item><title>一、初识jQuery</title><link>https://study.tzki.cn/posts/notes/20200615/20200615-1/</link><pubDate>Mon, 15 Jun 2020 18:50:50 +0800</pubDate><author>Author</author><guid>https://study.tzki.cn/posts/notes/20200615/20200615-1/</guid><description><![CDATA[版本选择 1.x：兼容ie678，但相对其它版本文件较大，官方只做BUG维护，功能不再新增，最终版本：1.12.4 (2016年5月20日).
2.x：不兼容ie678，相对1.x文件较小，官方只做BUG维护，功能不再新增，最终版本：2.2.4 (2016年5月20日)
3.x：不兼容ie678，只支持最新的浏览器，很多老的jQuery插件不支持这个版本，相对1.x文件较小，提供不包含Ajax/动画API版本。
jQuery的使用  下载jQuery或者使用cdn 引入jQuery的文件 编写代码  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  &lt;!DOCTYPE html&gt; &lt;html lang=&#34;en&#34;&gt; &lt;head&gt; &lt;meta charset=&#34;UTF-8&#34;&gt; &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script src=&#34;https://cdn.bootcdn.net/ajax/libs/jquery/1.12.4/jquery.js&#34;&gt;&lt;/script&gt; &lt;script&gt; $(document).ready(function () { alert(&#39;hello tzk&#39;) }) &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt;   jQuery和JS的加载模式   通过原生JS和jQuery都可以拿到DOM元素，及图片的宽高
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  window.]]></description></item></channel></rss>